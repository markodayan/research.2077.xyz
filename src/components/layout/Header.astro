---
import MobileNav from "../layout/MobileNav.astro";
---

<header class="pt-8 px-6 lg:px-48">
  <nav class="flex justify-between items-center">
    <div class="">
      <div>
        <a href="/" class="logo block light dark:hidden">
          <img src="/logo-black.webp" alt="" width="197" height="58" />
        </a>
        <a href="/" class="logo hidden dark dark:block">
          <img src="/logo-white.webp" alt="" width="197" height="58" />
        </a>
      </div>
    </div>

    <!-- dark mode button functionality -->
    <!--
    <button
      id="btn"
      class="h-12 w-12 rounded-lg p-2 hover:bg-gray-100 dark:hover:bg-gray-700"
    >
      <svg
        id="dark-icon"
        class="fill-slate-700 block dark:hidden dark"
        fill="currentColor"
        viewBox="0 0 20 20"
      >
        <path
          d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"
        ></path>
      </svg>
      <svg
        id="light-icon"
        class="fill-yellow-500 hidden dark:block light"
        fill="currentColor"
        viewBox="0 0 20 20"
      >
        <path
          d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
          fill-rule="evenodd"
          clip-rule="evenodd"></path>
      </svg>
    </button>
    -->

    <div class="">
      <MobileNav />

      <div class="hidden lg:flex gap-x-16">
        <div class="relative">
          <a href="#" class="flex gap-x-2 items-center hover:text-[#C6FF50]">
            Resources 
            <span class="resources-button">
              <svg width="16" height="17" viewBox="0 0 16 17" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path class="svg-path" fill-rule="evenodd" clip-rule="evenodd" d="M2.19526 5.77046C2.45561 5.51011 2.87772 5.51011 3.13807 5.77046L7.52861 10.161C7.78896 10.4213 8.21107 10.4213 8.47142 10.161L12.8619 5.77046C13.1223 5.51011 13.5444 5.51011 13.8047 5.77046C14.0651 6.03081 14.0651 6.45292 13.8047 6.71327L9.41423 11.1038C8.63318 11.8848 7.36685 11.8848 6.5858 11.1038L2.19526 6.71327C1.93491 6.45292 1.93491 6.03081 2.19526 5.77046Z" fill="#D4D4D4"/>
              </svg>
            </span>
          </a>
          <div class="sidebar absolute left-0 mt-4 p-4 pe-6 rounded-xl hidden bg-[#1b1b1b] grid gap-y-4">
            <a href="https://eip2077.info" target="_blank" class="block px-4 py-2 hover:bg-[#C6FF50] hover:text-gray-700 hover:rounded">EIP-2077</a>
            <a href="https://eips.wiki" target="_blank" class="block px-4 py-2 hover:bg-[#C6FF50] hover:text-gray-700 hover:rounded">EIP Wiki</a>
            <a href="https://research.2077.xyz" target="_blank" class="block px-4 py-2 hover:bg-[#C6FF50] hover:text-gray-700 hover:rounded">2077 Labs</a>
            <a href="https://etherpedia.2077.xyz" target="_blank" class="block px-4 py-2 hover:bg-[#C6FF50] hover:text-gray-700 hover:rounded">Etherpedia</a>
          </div>
        </div>
        
        <a href="https://2077.xyz/support" class="hover:text-[#C6FF50]">Support us</a>
      </div>
    </div>
  </nav>
</header>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const dropdownButton = document.querySelector('.resources-button') as HTMLSpanElement;
    const dropdownMenu = document.querySelector('.sidebar') as HTMLDivElement;
    let isOpen = false;

    if (dropdownButton && dropdownMenu) {
      dropdownButton.addEventListener('click', (event: MouseEvent) => {
        event.preventDefault(); // Prevent default anchor behavior
        isOpen = !isOpen;
        dropdownMenu.classList.toggle('show', isOpen);
      });

      document.addEventListener('click', (event: MouseEvent) => {
        if (!dropdownButton.contains(event.target as Node) && !dropdownMenu.contains(event.target as Node)) {
          isOpen = false;
          dropdownMenu.classList.remove('show');
        }
      });
    }
  });
</script>

<style>
  .sidebar {
    display: none;
  }
  .sidebar.show {
    display: block;
  }

  .resources-button:hover .svg-path {
    fill: #C6FF50;
  }
</style>
